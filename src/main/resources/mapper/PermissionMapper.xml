<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.iris.hamster.mapper.PermissionMapper">

    <resultMap id="BaseResultMap" type="cn.iris.hamster.bean.pojo.Permission">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="name" column="`name`" jdbcType="VARCHAR"/>
        <result property="key" column="`key`" jdbcType="VARCHAR"/>
        <result property="isMenu" column="is_menu" jdbcType="CHAR"/>
        <result property="icon" column="icon" jdbcType="VARCHAR"/>
        <result property="path" column="path" jdbcType="VARCHAR"/>
        <result property="parentId" column="parent_id" jdbcType="BIGINT"/>
        <result property="status" column="`status`" jdbcType="CHAR"/>
        <result property="createBy" column="create_by" jdbcType="BIGINT"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="BIGINT"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,`name`,`key`,is_menu,icon,`path`,`status`,create_by,create_time,update_by,update_time,remark
    </sql>

    <insert id="updateAdminR_P">
        INSERT INTO role_permission(rid, pid, `status`) VALUE ('1', #{pid}, '0')
    </insert>

    <update id="changeStatus">
        UPDATE role_permission
        SET `status` = #{status}
        WHERE pid = #{pid}
    </update>

    <select id="isKeyExist" resultType="java.lang.Integer">
        SELECT count(`id`)
        FROM `permission`
        WHERE `key` = #{key};
    </select>

    <select id="getPermsByRid" resultType="cn.iris.hamster.bean.pojo.Permission">
        select p.id as id,
               p.`name` as `name`,
               p.`key` as `key`,
               p.is_menu as isMenu,
               p.parent_id as parentId,
               p.icon as icon,
               p.path as `path`,
               p.`status` as `status`,
               p.create_by as createBy,
               p.create_time as createTime,
               p.update_by as updateBy,
               p.update_time as updateTime,
               p.remark as remark
        from permission p
        left join role_permission rp on rp.pid = p.id
        where rp.rid = #{rid}
    </select>

    <select id="listByLimit" resultType="cn.iris.hamster.bean.vo.PermissionVo">
        select p.id as id,
        p.name as `name`,
        p.`key` as `key`,
        p.is_menu as isMenu,
        p.parent_id as parentId,
        p.icon as icon,
        p.path as `path`,
        p.status as `status`,
        p.remark as remark,
        u1.name as createBy,
        p.create_time as createTime,
        u2.name as updateBy,
        p.update_time as updateTime
        from permission p
        left join `user` u1 on p.create_by = u1.id
        left join `user` u2 on p.update_by = u2.id
        <where>
            <if test="query.keyword != null and query.keyword != ''">
                and p.name like concat('%', #{query.keyword}, '%')
                or p.`key` like concat('%', #{query.keyword}, '%')
            </if>
            <if test='query.status == "0" or query.status == "1"'>
                and p.status = #{query.status}
            </if>
            <if test='query.isMenu == "0" or query.isMenu == "1"'>
                and p.is_menu = #{query.isMenu}
            </if>
        </where>
        order by p.is_menu, p.id
        limit #{start}, #{query.size}
    </select>

    <select id="getCountByLimit" resultType="java.lang.Integer">
        select count(*) from `permission`
        <where>
            <if test="query.keyword != null and query.keyword != ''">
                and `name` like concat('%', #{query.keyword}, '%')
                or `key` like concat('%', #{query.keyword}, '%')
            </if>
            <if test='query.status == "0" or query.status == "1"'>
                and `status` = #{query.status}
            </if>
            <if test='query.isMenu == "0" or query.isMenu == "1"'>
                and is_menu = #{query.isMenu}
            </if>
        </where>
    </select>

</mapper>
